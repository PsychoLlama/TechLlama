{"version":3,"sources":["webpack://@psychollama/website/./src/components/ManPage.js","webpack://@psychollama/website/./src/components/TmuxShell.js","webpack://@psychollama/website/./src/pages/recommendations.js"],"names":["ManPage","styled","props","theme","colors","green","synopsis","section","magenta","text","yellow","cyan","blue","TmuxShell","children","currentPage","links","name","target","keystack","useRef","detectWindowNavigation","useCallback","event","keyChord","getKeyChord","preventDefault","stopPropagation","current","slice","concat","prefix","targetWindow","isNaN","Infinity","Number","length","navigate","useEffect","document","body","addEventListener","removeEventListener","Container","Navigation","SiteName","Links","map","link","index","NavItem","key","data-active","NavLink","to","ctrlKey","altKey","metaKey","filter","Boolean","join","background","attrs","as","Link","Recommendations","html","data","file","child","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-recommendations-js-63ac4442ce8ead644a47.js","sourcesContent":["import styled from 'styled-components';\n\n/**\n * Styles HTML to look like a man page viewed by neovim under the OneDark\n * theme, which happens to be my personal setup. Normally this would use\n * dedicated styled-components instead of children selectors, but it has to\n * work with markdown's generated HTML.\n */\nconst ManPage = styled.main`\n  padding: 0.5rem 1rem;\n  line-height: 1.4rem;\n\n  h1 {\n    display: flex;\n    justify-content: space-between;\n    flex-grow: 1;\n    color: ${(props) => props.theme.colors.green};\n    padding-bottom: ${(props) => (props.synopsis ? '2rem' : '1rem')};\n\n    ::before,\n    ::after {\n      content: '${(props) => props.section}';\n      display: block;\n    }\n\n    font-size: inherit;\n    margin: 0;\n    font-weight: normal;\n\n    @media screen and (max-width: 640px) {\n      ::before,\n      ::after {\n        display: none;\n      }\n    }\n  }\n\n  h2 {\n    color: ${(props) => props.theme.colors.magenta};\n    font-size: inherit;\n    font-weight: normal;\n    text-transform: uppercase;\n    margin: 0;\n\n    :first-of-type {\n      margin-top: 2rem;\n    }\n  }\n\n  p {\n    color: ${(props) => props.theme.colors.text};\n    margin: 0;\n    margin-left: 4rem;\n    margin-bottom: 2rem;\n\n    & + & {\n      margin-top: 1rem;\n    }\n\n    @media screen and (max-width: 640px) {\n      margin-left: 2rem;\n    }\n  }\n\n  a {\n    color: ${(props) => props.theme.colors.yellow};\n    text-decoration: none;\n\n    :hover {\n      text-decoration: underline;\n    }\n  }\n\n  dl {\n    margin: 2rem 4rem;\n    margin-right: 0;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    grid-column-gap: 4rem;\n    grid-row-gap: 1rem;\n\n    @media screen and (max-width: 640px) {\n      margin-left: 2rem;\n      grid-template-columns: 1fr;\n    }\n  }\n\n  dt {\n    color: ${(props) => props.theme.colors.cyan};\n\n    ::before {\n      content: '--';\n    }\n  }\n\n  dd {\n    margin: 0;\n    max-width: 50rem;\n\n    @media screen and (max-width: 640px) {\n      margin-bottom: 2rem;\n    }\n  }\n\n  ul,\n  ol {\n    color: ${(props) => props.theme.colors.text};\n    padding: 0;\n    margin: 0;\n    margin-left: 4rem;\n    margin-bottom: 2rem;\n    list-style-type: '- ';\n\n    & + & {\n      margin-top: 1rem;\n    }\n\n    li {\n      margin-left: 1rem;\n    }\n\n    @media screen and (max-width: 640px) {\n      margin-left: 2rem;\n      list-style-type: none;\n\n      li {\n        margin-left: 0;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n\n  hr {\n    margin: 2rem 4rem;\n    border: 1px dashed ${(props) => props.theme.colors.text};\n  }\n\n  code {\n    background-color: rgba(255, 255, 255, 0.1);\n    color: ${(props) => props.theme.colors.blue};\n    padding: 0.1rem 0.2rem;\n    border-radius: 0.2rem;\n  }\n`;\n\nexport default ManPage;\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link, navigate } from 'gatsby';\n\nexport default function TmuxShell({ children, currentPage }) {\n  const links = [\n    { name: 'About', target: '/' },\n    { name: 'Recommendations', target: '/recommendations/' },\n  ];\n\n  const keystack = useRef([]);\n\n  const detectWindowNavigation = useCallback((event) => {\n    const keyChord = getKeyChord(event);\n\n    if (keyChord === 'ctrl+b') {\n      event.preventDefault();\n      event.stopPropagation();\n      keystack.current = [];\n    }\n\n    keystack.current = keystack.current.slice(-1).concat(keyChord);\n    const prefix = keystack.current[0];\n    const targetWindow = isNaN(keystack.current[1])\n      ? Infinity\n      : Number(keystack.current[1]) - 1;\n\n    if (prefix === 'ctrl+b' && targetWindow < links.length) {\n      navigate(links[targetWindow].target);\n    }\n\n    return navigate;\n  }, []);\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', detectWindowNavigation);\n    return () => {\n      document.body.removeEventListener('keydown', detectWindowNavigation);\n    };\n  }, []);\n\n  return (\n    <Container>\n      {children}\n      <Navigation>\n        <SiteName>PsychoLlama</SiteName>\n\n        <Links>\n          {links.map((link, index) => (\n            <NavItem key={index} data-active={currentPage === link.target}>\n              <NavLink to={link.target}>{link.name}</NavLink>\n            </NavItem>\n          ))}\n        </Links>\n      </Navigation>\n    </Container>\n  );\n}\n\nconst getKeyChord = (event) => {\n  const sequence = [\n    event.ctrlKey && 'ctrl',\n    event.altKey && 'alt',\n    event.metaKey && 'cmd',\n    event.key,\n  ];\n\n  return sequence.filter(Boolean).join('+');\n};\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${(props) => props.theme.colors.text};\n  font-size: 16px;\n`;\n\nconst Navigation = styled.nav`\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.green};\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nconst Links = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n  display: flex;\n  counter-set: nav-link 0;\n`;\n\nconst NavItem = styled.li`\n  margin: 0 1ch;\n\n  ::first-child {\n    margin-left: 0;\n  }\n\n  ::before {\n    content: counter(nav-link) ':';\n    counter-increment: nav-link;\n  }\n\n  &[data-active='true'] {\n    margin-right: 0;\n\n    ::after {\n      content: '*';\n    }\n  }\n`;\n\nconst SiteName = styled(NavItem).attrs({ as: 'p' })`\n  margin: 0;\n\n  ::before {\n    content: '[';\n  }\n\n  ::after {\n    content: ']';\n  }\n\n  @media screen and (max-width: 640px) {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  cursor: pointer;\n  border-bottom: 1px solid transparent;\n  color: inherit;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    color: ${(props) => props.theme.colors.text};\n    border-bottom-color: ${(props) => props.theme.colors.text};\n  }\n`;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport TmuxShell from '../components/TmuxShell';\nimport ManPage from '../components/ManPage';\n\nexport default function Recommendations(props) {\n  const [{ html }] = props.data.file.children.filter((child) => child.html);\n\n  return (\n    <TmuxShell currentPage=\"/recommendations/\">\n      <Helmet>\n        <title>Recommendations | PsychoLlama</title>\n      </Helmet>\n\n      <ManPage\n        synopsis\n        section=\"recommendations(7)\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </TmuxShell>\n  );\n}\n\nexport const query = graphql`\n  query RecommendationsMarkdown {\n    file(name: { eq: \"recommendations\" }) {\n      children {\n        ... on MarkdownRemark {\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}